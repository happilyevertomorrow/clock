
//clockType.h
//The following program outputs the time in variation with the seconds of a clock.

#ifndef CLOCKTYPE_H
#define CLOCKTYPE_H
 
class clockType
{
public:
    void setTime(int& hours, int& minutes, int& seconds, int& month) const;
		//Function to set the time
		//The time is set according to the parameters
		//Postcondition: hr = hours; min = minutes; 
	   	 //               sec = seconds
 		//  The function checks whether the values of hours, , 
 		//  minutes and seconds are valid. If a value is invalid, 
 		//  the default value 0 is assigned.
    void getTime(int& hours, int& minutes, int& seconds, int&month) const;
		//Function to return the time
		//Postcondition: hours = hr; minmutes = min;
		//	           seconds = sec; months = mon;
    void printTime() const;
		//Function to print the time
 		//Postcondition: Time is printed in the form hh:mm:ss
    void incrementSeconds();
		//Function to increment the time by one second.
		//Postcondition: The time is incremented by one second
		//  If the before-increment time is 23:59:59, the time
 		//  is reset to 00:00:00.
    void incrementMinutes();
		//Function to increment the time by one minute.
		//Postcondition: The time is incremented by one minute 
		//  If the before-increment time is 23:59:53, the time
  		//  is reset to 00:00:53.
    void incrementHours();
		//Function to increment the time by one hour.
		//Postcondition: The time is incremented by one hour 
		//  If the before-increment time is 23:45:53, the time 
		//  is reset to 00:45:53.
	void getMonth() const;
	    //Function to return month
	    //Postcondition: The months are displayed on the screen.
	    //Month should be an integer (0 - 11).

bool equalTime(const clockType& otherClock) const;
		//Function to compare the two times.
		//Postcondition: Returns true if this time is equal to
		//               otherClock; otherwise, returns false
clockType(int hours, int minutes, int seconds, int month);
		//Constructor with parameters 
		//The time is set according to the parameters.
		//Postconditions: hr = hours; min = minutes; 
		//                sec = seconds, mon = month;
 		//  The constructor checks whether the values of hours, 
 		//  minutes, seconds, and months are valid. If a value is invalid, 
 		//  the default value 0 is assigned.

    clockType();
		//Default constructor with parameters 
 		//The time is set to 00:00:00.
		//Postcondition: hr = 0; min = 0; sec = 0; mon = 0;
private:
    int hr;  //stores the hours
    int min; //stores the minutes
    int sec; //stores the seconds
	int mon; //stores the month
};

#endif




//clockType.cpp


#include <iostream>
#include <iomanip>
#include "clockType.h"

using namespace std;

void clockType::getTime(int& hours, int& minutes, int& seconds, int& month) const
{
	hours = hr;
	minutes = min;
	seconds = sec;
	month = mon;
}

void clockType::printTime() const
{
if (hr < 10)

    cout << "0";

cout << hr << ":";

if (min < 10)

    cout << "0";

cout << min << ":";

if (sec < 10)

   cout << "0";

cout << sec;
	
}

void clockType::incrementHours()
{
    hr++;
    if (hr > 23)
        hr = 0;
}

void clockType::incrementMinutes()
{

    min++;
    if (min > 59)
    {
        min = 0;
        incrementHours(); //increment hours
	}
}



void  clockType::incrementSeconds()
{

     sec++;

	 if (sec > 59)
     {
         sec = 0;
         incrementMinutes(); //increment minutes
	 }
}


void clockType::getMonth () const
{ 
	if ((mon >= 0) && (mon <=11))

	cout<< "The current month is:" <<mon<<endl;

	else 

	cout<< "Please enter a valid month entry (0-11)"<<endl;

}

bool clockType::equalTime(const clockType& otherClock) const
{

return (hr == otherClock.hr
        && min == otherClock.min
        && sec == otherClock.sec);

}

